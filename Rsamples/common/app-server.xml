<?xml version="1.0"?>
<!--
$Id: app-server.xml 755 2007-04-30 04:28:49Z wjkim $
-->
<project name="app-server-common" basedir=".">

    <property environment="env"/>
    <!-- Define sensible defaults for app-server properties -->
    <property file="${ant.file.app-server-common}/../app-server.properties"/>

    <path id="javaee.classpath">
        <pathelement location="${jeus.home}/lib/system/javaee.jar"/>
        <pathelement location="${jeus.home}/lib/system/jeusapi.jar"/>
    </path>

    <path id="javaclient.classpath">
        <path refid="javaee.classpath"/>
        <fileset dir="${jeus.home}/lib/client">
            <include name="**/*.jar"/>
        </fileset>
	<fileset dir="${jeus.home}/lib/system">
            <include name="jeusmp.jar"/>
            <include name="jmxri.jar"/>
            <include name="jmxremote.jar"/>
        </fileset>
    </path>
    
    <path id="standalonejavaclient.classpath">
        <path refid="javaee.classpath"/>
        <fileset dir="${jeus.home}/lib/client">
            <include name="jclient.jar"/>
	    <include name="jclient_jaxb.jar"/>
        </fileset>
	<fileset dir="${jeus.home}/lib/system">
            <include name="jeusmp.jar"/>
            <include name="jmxri.jar"/>
            <include name="jmxremote.jar"/>
        </fileset>
    </path>

    <path id="jeus.libraries.classpath">
        <pathelement location="${jeus.home}/classes"/>
        <fileset dir="${jeus.home}/lib/system">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${jeus.home}/lib/application">
           <include name="**/*.jar"/>
        </fileset>
	  </path>

    <taskdef resource="jeus/util/ant/jeusant.properties">
      <classpath>
        <path refid="jeus.libraries.classpath"/>
      </classpath>
    </taskdef>

    <target name="setTools" depends="setOSConditions, setToolUnix, setToolWindows">
        <property name="jeus.container.id" value="${jeus.node}_${jeus.container}"/>
    </target>
    
    <target name="setOSConditions">
      <condition property="isUnix">
        <os family="unix"/>
      </condition>

      <condition property="isWindows">
        <os family="windows" />
      </condition>
        
      <condition property="isMac">
        <os family="mac"/>
      </condition>
    </target>

    <target name="setToolUnix" if="isUnix">
        <property name="jeus.node" value="${jeus.vhostname}"/>

        <property name="cmd.jeus" value="${jeus.home}/bin/jeus"/>
        <property name="cmd.jeusadmin" value="${jeus.home}/bin/jeusadmin"/>
        <property name="cmd.appclient" value="${jeus.home}/bin/appclient"/>
        
        <property name="cmd.wsgen" value="${jeus.home}/bin/wsgen"/>
        <property name="cmd.wsimport" value="${jeus.home}/bin/wsimport"/>
        <property name="cmd.java2wsdl" value="${jeus.home}/bin/java2wsdl"/>
        <property name="cmd.wsdl2java" value="${jeus.home}/bin/wsdl2java"/>
        <property name="cmd.wsdl2uddi" value="${jeus.home}/bin/wsdl2uddi"/>
        <property name="cmd.keytool" value="${java.home}/bin/keytool"/>
    </target>

    <target name="setToolWindows" if="isWindows">
        <property name="jeus.node" value="${jeus.vhostname}"/>

        <property name="cmd.jeus" value="${jeus.home}/bin/jeus.cmd"/>
        <property name="cmd.jeusadmin" value="${jeus.home}/bin/jeusadmin.cmd"/>
        <property name="cmd.appclient" value="${jeus.home}/bin/appclient.cmd"/>
        
        <property name="cmd.wsgen" value="${jeus.home}/bin/wsgen.cmd"/>
        <property name="cmd.wsimport" value="${jeus.home}/bin/wsimport.cmd"/>
        <property name="cmd.java2wsdl" value="${jeus.home}/bin/java2wsdl.cmd"/>
        <property name="cmd.wsdl2java" value="${jeus.home}/bin/wsdl2java.cmd"/>
        <property name="cmd.wsdl2uddi" value="${jeus.home}/bin/wsdl2uddi.cmd"/>
        <property name="cmd.keytool" value="${java.home}/bin/keytool.exe"/>
    </target>

    <target name="do-deploy">
        <echo>Deploying ${file}...</echo>
        <antcall target="do-deploy-cmd">
            <param name="file" value="${file}"/>
        </antcall>
    </target>
    
    <target name="do-undeploy">
        <echo>Undeploying ${module.name}...</echo>
        <antcall target="do-undeploy-cmd">
        </antcall>
    </target>
    
    <target name="do-deploy-ant" depends="setTools">
        <fail unless="file"/>
        <echo>jeus.node=${jeus.node}</echo>
        <echo>jeus.container.id=${jeus.container.id}</echo>
        <echo>file=${file}</echo>
        <deploy
             deployURI="deployer:Jeus:${jeus.node}"
             user="${jeus.admin.username}"
             password="${jeus.admin.password}"
             targetNames="${jeus.container.id}"
             modulePath="${file}"
             fastdeploy="false" />
    </target>
    
    <target name="do-undeploy-ant" depends="setTools">
        <modulecommand
           deployURI="deployer:Jeus:${jeus.node}"
           command="undeploy"
           modulename="${module.name}"
           moduletype="J2EEApplication"
           targetNames="${jeus.container.id}"
           user="${jeus.admin.username}"
           password="${jeus.admin.password}" />
    </target>
    
    <target name="do-deploy-cmd" depends="setTools">
        <fail unless="file"/>
        <property name="args" value="${jeus.node} -U${jeus.admin.username} -P${jeus.admin.password} deploy -absolute-path ${file} as ${module.name}"/>
        <echo>jeusadmin ${args}</echo>
        <exec executable="${cmd.jeusadmin}" failonerror="true">
            <arg line="${args}"/>
        </exec>
    </target>

    <target name="do-undeploy-cmd" depends="setTools">
        <property name="args" value="${jeus.node} -U${jeus.admin.username} -P${jeus.admin.password} undeploy ${module.name}"/>
        <echo>jeusadmin ${args}</echo>
        <exec executable="${cmd.jeusadmin}" failonerror="true">
            <arg line="${args}"/>
        </exec>
    </target>

    <target name="undeployall" depends="setTools">
        <echo>Undeploying all...</echo>
        <property name="args" value="${jeus.node} -U${jeus.admin.username} -P${jeus.admin.password} undeploy -a"/>
        <echo>jeusadmin ${args}</echo>
        <exec executable="${cmd.jeusadmin}" failonerror="true">
            <arg line="${args}"/>
        </exec>
    </target>

    <target name="applist" depends="setTools">
        <property name="args" value="${jeus.node} -U${jeus.admin.username} -P${jeus.admin.password} applist -con ${jeus.container.id}"/>
        <echo>jeusadmin ${args}</echo>
        <exec executable="${cmd.jeusadmin}">
            <arg line="${args}"/>
        </exec>
    </target>

    <target name="do-runappclient" depends="setTools">
        <property name="_arguments" value="-client ${client}"/>
        <echo>appclient ${_arguments}</echo>
	<java fork="true" failonerror="true" classname="jeus.client.container.ClientContainer">
            <sysproperty key="java.naming.provider.url"     value="${java.naming.provider.url}:${jeus.baseport}"/>
            <sysproperty key="java.naming.factory.initial"  value="${java.naming.factory.initial}"/>
            <sysproperty key="java.naming.factory.url.pkgs" value="jeus.jndi.jns.url"/>
            <sysproperty key="jeus.baseport" value="${jeus.baseport}"/>
	    <arg line ="${_arguments}"/>
            <classpath>
                <pathelement path="${module.file}"/>
                <path refid="javaclient.classpath"/>
            </classpath>
        </java>
    </target>

    <target name="do-wsgen" depends="setTools">
        <property name="args" value="-cp ${build.classes.dir} -keep -d ${build.classes.dir} ${sib.file}"/>
        <echo>wsgen ${args}</echo>
        <exec executable="${cmd.wsgen}">
            <arg line="${args}"/>
        </exec>
    </target>
    
    <target name="do-wsimport" depends="setTools">
        <property name="args" value="-keep -p ${package.name} -d ${build.classes.dir} ${binding.file} ${wsdl.file}"/>
        <echo>wsimport ${args}</echo>
        <exec executable="${cmd.wsimport}">
            <arg line="${args}"/>
        </exec>
    </target>
    
    <target name="do-java2wsdl" depends="setTools">
        <property name="args" value="${java2wsdl.option}"/>
        <echo>java2wsdl ${args}</echo>
        <exec executable="${cmd.java2wsdl}">
            <arg line="${args}"/>
        </exec>
    </target>
    
    <target name="do-wsdl2java" depends="setTools">
        <property name="args" value="${wsdl2java.option}"/>
        <echo>wsdl2java ${args}</echo>
        <exec executable="${cmd.wsdl2java}">
            <arg line="${args}"/>
        </exec>
    </target>
    
    <target name="do-wsdl2uddi" depends="setTools">
        <property name="args" value="${wsdl2uddi.option}"/>
        <echo>wsdl2uddi ${args}</echo>
        <exec executable="${cmd.wsdl2uddi}">
            <arg line="${args}"/>
        </exec>
    </target>
    
    <target name="do-keytool" depends="setTools">
        <property name="args" value="${keytool.option}"/>
        <echo>keytool ${args}</echo>
        <exec executable="${cmd.keytool}">
            <arg line="${args}"/>
        </exec>
    </target>
    
  <target name="start-db" depends="" description="starts the databse server." >
  </target>
  
  <target name="stop-db" depends="" description="stops the database server." >
  </target>

  <!-- Dummy placeholder targets. They can be overridden by application build file -->
  <target name="-pre-deploy"/>
</project>
