<?xml version="1.0" encoding="EUC-KR"?>
<xs:schema
        xmlns="http://www.tmaxsoft.com/xml/ns/jeus"
        targetNamespace="http://www.tmaxsoft.com/xml/ns/jeus"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        elementFormDefault="qualified"
        attributeFormDefault="unqualified"
        version="6.0">

    <xs:complexType name="session-configType">
        <xs:sequence>
            <xs:element minOccurs="0" name="distributable" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: 세션 클러스터링의 참여 여부 결정한다. 세션 클러스터링의 종류에는 중앙식 세션 클러스터링과 분산식 세션 클러스터링이 있다.
                                       세션 클러스터링의 종류는 JEUSMain.xml의 설정에 따라 결정된다. 세션 클러스터링에 참여하기 위해서는 JEUSMain.xml에 중앙식
                                       또는 분산식의 세션매니저 설정이 있어야 하며, 노드 클러스터링을 전제로 한다. 이 값이 true라 하더라도 JEUSMain.xml에
                                       세션 매니저 설정이 없다면 세션 클러스터링에 참여하지 않는다.
                        [Value Description]: Boolean값으로 이 설정을 활성화 또는 비활성화 한다. 디폴트 값으로 false가 주어진다.
                        [Value Type Description]: Boolean
                        [Defined Value]: [true]: 중앙식 세션 매니저를 사용한다. JEUSMain.xml에 중앙식 세션매니저의 설정이 있어야 하며, 세션 클러스터링에 참여하기 위해서는 노드 클러스터링이 되어야 한다.
                                         [false]: 분산식 세션 매니저를 사용한다. JEUSMain.xml에 분산식 세션매니저의 설정이 있어야 하며, 세션 클러스터링에 참여하기 위해서는 노드 클러스터링이 되어야 한다.
                     ]]></xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="shared" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: Context간에 세션의 공유 여부를 결정한다. 세션 공유는 한 Context에서 생성된 세션 객체를 다른 Context에서도
                        			   사용할 수 있는 기능을 말한다. 세션 공유를 활성화 시키고 세션 클러스터링에 참여하지 않았을 경우, 세션 객체의 공유 범위는
                        			   어플리케이션 단위이다. 즉, 같은 어플리케이션 안에서는 같은 세션 객체를 공유할 수 있다.
                        [Value Description]: Boolean값으로 이 설정을 활성화 또는 비활성화 한다. 디폴트 값으로 false가 주어진다.
                        [Value Type Description]: Boolean
                        [Defined Value]: [true]: 세션을 공유한다.
                                         [false]: 세션을 공유하지 않는다.
                     ]]></xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="timeout" type="xs:int">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: 세션 객체가 가장 최근에 사용된 이후의 유효기간을 결정한다. 유효기간 이후의 세션은 제거된다.
                        			   web.xml에 세션 타임아웃 값이 설정되었을 경우 이 설정값보다 우선 적용된다.
                        [Value Description]: 시간주기는 공유세션이 제거되어야 할 분단위로 표현된다. 디폴트 값으로 30분이 주어진다.
                        [Value Type Description]: Integer
                        [Defined Value]: [-1]: 본 값을 설정했다면 세션타임아웃 검사는 수행되지 않는다.세션은 web.xml에 다른 설정이 없다면 계속 유지된다.
                    ]]></xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element minOccurs="0" name="reload-persistent" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: Context가 reload될 때 세션의 attribute객체들을 계속 유지할지 여부를 결정한다.
                        			   true일 경우 reload와 관계없이 세션의 attribute들은 계속 유지되며, false일 경우 reload시
                        			   모든 attribute들이 제거된다.
                        [Value Description]: Boolean값으로 이 설정을 활성화 또는 비활성화 한다. 디폴트 값으로 false가 주어진다.
                        [Value Type Description]: Boolean
                        [Defined Value]: [true]: 해당 설정을 활성화 한다.
                                         [false]: 해당 설정을 비활성화 한다.
                    ]]></xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element minOccurs="0" name="url-rewriting" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: Web Container는 클라이언트로부터 요청에 대한 세션을 유지하기 위해서 기본적으로 쿠키를 통해서 세션 ID를 주고 받는다.
                        			   하지만, 쿠키가 처음 만들어진 곳의 도메인 이름과 다른 도메인 이름을 가진 요청을 보낼 때 브라우저는 쿠키에 세션 ID를
                        			   전달하지 않는다. 다른 도메인 이름을 가진 일련의 요청에 같은 세션 ID를 사용해야 할 때 이 옵션을 사용한다.
                        			   이 옵션을 true로 설정하면 비록 웹 브라우저가 쿠키를 지원하더라도 쿠키로 세션 정보를 전달하는 대신 URL rewriting을
                        			   통해서 세션 정보를 전달하게 한다. 이 경우 비록 다른 도메인 이름을 통해 여러 호출이 사용되어도 세션 	정보의 교환은
                        			   이루어질 것이다. 이것은 context에 의해서 반환되는 모든 URL에 유일한 JSESSIONID가 URL파라미터로 붙게 된다.
                        			   만일 false로 설정되면 Url rewriting은 사용되지 않을 것이고 디폴트 쿠키가 기준으로 사용된다.
                        [Value Description]: Boolean값으로 이 설정을 활성화 또는 비활성화 한다. 디폴트 값으로 false가 주어진다.
                        [Value Type Description]: Boolean
                        [Defined Value]: [true]: 해당 설정을 활성화 한다.
                                         [false]: 해당 설정을 비활성화 한다.
                   ]]></xs:documentation>
                    <xs:appinfo>
                        <metadata>
                            <element-level>ADVANCED</element-level>
                        </metadata>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>

            <xs:element minOccurs="0" name="session-cookie" type="session-cookieType">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: 이 element는 클라이언트 세션을 유지하지 위하여 클라이언트들로 보내지는 session cookie의 속성을 구성한다.
                    ]]></xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="session-cookieType">
        <xs:sequence>
            <xs:element minOccurs="0" name="jsessionid-name" type="xs:token">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: 세션 ID 이름으로 표준 이름인 “JSESSIONID” 을 사용하지 않고 다른 이름을 사용하고자 할 때 이 설정을 사용한다. 디폴트 값으로 "JSESSIONID"가 주어진다.
                    ]]></xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="version" type="xs:int">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: 쿠키 ID 버전을 설정한다.
                        [Value Description]: Either 0 or 1, 디폴트 값으로 0이 주어진다.
                        [Value Type Description]: Integer
                        [Defined Value]: [0]: 디폴트 NS 쿠키 유형.
                                         [1]: RFC 스펙. 기본 쿠키 유형.
                    ]]></xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="domain" type="xs:token">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: Session id 쿠키를 보내는 서버의 도메인 이름을 설정한다. cookie는 이 도메인 요청에 대해서만 되돌아 온다.
                        [Value Description]: 하나의 적합한 도메인 이름. 이는 “.”으로 시작되고 hostname을 지정해선 안 된다(RFC-2109 스펙에 의해).
                    ]]></xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="path" type="xs:token">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: 하나의 session id 쿠키가 보내질 도메인 내에 URL 경로를 설정한다.
                                                쿠키는 도메인이 적합할 때까지 해당 URL에 어떤 요청과 더불어 보내진다(<domain>element를 참조).
                                                예를 들어 만일 “/examples”란 경로가 설정되고, 도메인은 “.foo.com”으로 설정되고
                                                클라이언트 요청들은 "www.foo.com/examples"  이면 클라이언트의 쿠키는 요청과 더불어 보내진다.
                        [Value Description]: 도메인 밑에 하나의 적합한 URL경로
                        [Defined Value]: [/]: 도메인이 적합할 동안 요청경로에 상관없이 쿠키는 보내진다.
                    ]]></xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="max-age" type="xs:int">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: Session id 쿠키의 “expires”속성을 설정한다. 이 시간주기가 되면 쿠키는 클라이언트로부터 제거되고 더 이상 보내지 않는다.
                        [Value Description]: 초단위 시간주기. 디폴트 값으로 -1이 주어진다.
                        [Defined Value]: [-1]: 해당 값은 쿠키의 “expires”속성을 사용하지 않는 것을 나타내고 따라서 쿠키는 사용자의 세션이 끝남과 동시에 끝난다(브라우저를 닫음).
                    ]]></xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="secure" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation><![CDATA[
                        [Description]: Session id 쿠키의 “secure”속성을 설정한다.
                                                만일 본element가 “true”로 설정되면 session id 쿠키는 오직 secure HTTPS 커넥션으로 보내진다.
                        [Value Description]: 쿠키가 오직 HTTPS위로 보내어질지 아닐지를 결정하는 Boolean값. 디폴트 값으로 false가 주어진다.
                        [Defined Value]: [true]: 오직 secure HTTPS 커넥션으로 본 session id 쿠키를 보낸다.
                                                [false]: 커넥션유형에 상관없이 session id 쿠키를 보낸다.
                    ]]></xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

</xs:schema>
