<?xml version="1.0"?>
<!DOCTYPE script PUBLIC
	"-//Apache Software Foundation//Tapestry Script Specification 3.0//EN"
	"http://jakarta.apache.org/tapestry/dtd/Script_3_0.dtd">
<script>

<input-symbol key="lifecycles"  class="java.util.List" required="yes"/>
<input-symbol key="source" required="yes"/>
<input-symbol key="target" required="yes"/>

<initialization>
dojo.connect(dojo.byId("${source.clientId}"), "onchange", (function(){
	var lifecycleMethods = new Object();
	var methods = null;
    var method = null;
    <foreach key="lifecycle" expression="lifecycles">
    	methods = new Array();
        <foreach key="invocation" expression="lifecycle.invocation"  index="ii">
		method = new Object();
        method.name = "${invocation.invocationMethod.methodName}";
        method.params = new Array();
        <foreach key="methodParam" expression="invocation.invocationMethod.setMethodParams ? invocation.invocationMethod.methodParams.methodParam : @java.util.Collections@EMPTY_LIST" index="mi">
        method.params[${mi}] = "${methodParam}";
        </foreach>
        method.invocationType = "${invocation.invocationType}";
        method.label = method.name+"(";

		for(var i = 0; i &lt; method.params.length; i++){
        	method.label += method.params[i];
            if(i &lt; method.params.length - 1)
                method.label += ", ";
        }

		method.label = method.label + "):"+method.invocationType;
		methods[${ii}] = method;
		</foreach>
		lifecycleMethods["${lifecycle.className}"] = methods;
	</foreach>
    return function(e){
        var methods = lifecycleMethods[e.target.value];
        var target = dojo.byId("${target.clientId}");
		dojo.forEach(target.options, function(option, index){target.options[index] = null;});
        if(!methods)return;

		dojo.forEach(methods, function(method, index){
			target.options[index] = new Option(method.label, method.label);
		});
    };
})());

</initialization>

</script>
